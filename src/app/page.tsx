'use client';

import { useEffect, useState } from 'react';
import ReactMarkdown from 'react-markdown';
import remarkGfm from 'remark-gfm';
import { useMarkdownStore, getDraftTitle } from '@/store/useMarkdownStore';
import { PlusCircle, BookOpen } from 'lucide-react';
import DraftSidebar from '@/components/DraftSidebar';

export default function HomePage() {
  const {
    getActiveDraft,
    updateActiveDraftContent,
    createDraft,
    updateActiveDraftTitle,
  } = useMarkdownStore();

  const activeDraft = getActiveDraft();
  const [isMounted, setIsMounted] = useState(false);

  useEffect(() => {
    setIsMounted(true);
  }, []);

  useEffect(() => {
    if (activeDraft && activeDraft.content) {
      const newTitle = getDraftTitle(activeDraft.content);
      if (newTitle !== activeDraft.title) {
         const oldTitleLooksAutoGenerated = activeDraft.title === 'Untitled Draft' || 
                                          activeDraft.title.startsWith('#') || 
                                          activeDraft.title === 'Untitled';
         if(oldTitleLooksAutoGenerated || newTitle !== 'Untitled'){
            updateActiveDraftTitle(activeDraft.id, newTitle);
         }
      }
    }
  }, [activeDraft?.content, activeDraft?.id, activeDraft?.title, updateActiveDraftTitle]);

  const handleMarkdownChange = (newContent: string) => {
    updateActiveDraftContent(newContent);
  };

  if (!isMounted) {
    // Skeleton loader using slate colors
    return (
      <div className="flex h-screen bg-slate-100">
        <div className="w-72 h-full bg-slate-200 border-r border-slate-300 flex flex-col flex-shrink-0 animate-pulse">
            <div className="p-3 border-b border-slate-300 h-[57px] flex items-center">
                <div className="h-4 bg-slate-300 rounded w-1/2"></div>
            </div>
            <div className="flex-1 overflow-y-auto p-1.5 space-y-0.5">
                {[...Array(8)].map((_, i) => (
                    <div key={i} className="h-8 bg-slate-300 rounded-md"></div>
                ))}
            </div>
            <div className="p-2 border-t border-slate-300 h-[37px] flex items-center justify-center">
                <div className="h-3 bg-slate-300 rounded w-1/3"></div>
            </div>
        </div>
        <main className="flex-1 flex flex-col overflow-hidden animate-pulse">
            <div className="p-3 border-b bg-white border-slate-200 h-[57px] flex justify-start items-center">
                <div className="h-5 bg-slate-300 rounded w-1/3"></div>
            </div>
            <div className="flex flex-1 overflow-hidden bg-slate-50 p-3 sm:p-4 gap-3 sm:gap-4">
                <div className="w-1/2 h-full bg-white rounded-md border border-slate-300 shadow-sm p-6">
                    <div className="space-y-4">
                        <div className="h-4 bg-slate-200 rounded w-3/4"></div>
                        <div className="h-4 bg-slate-200 rounded w-full"></div>
                        <div className="h-4 bg-slate-200 rounded w-5/6"></div>
                    </div>
                </div>
                <div className="w-1/2 h-full bg-white rounded-md border border-slate-300 shadow-sm p-6">
                    <div className="space-y-4">
                        <div className="h-4 bg-slate-200 rounded w-3/4"></div>
                        <div className="h-4 bg-slate-200 rounded w-full"></div>
                        <div className="h-4 bg-slate-200 rounded w-5/6"></div>
                    </div>
                </div>
            </div>
        </main>
      </div>
    );
  }
  
  return (
    // Use slate-100 for the outermost background
    <div className="flex h-screen bg-slate-100 text-slate-700 selection:bg-blue-500 selection:text-white">
      <DraftSidebar />
      <main className="flex-1 flex flex-col overflow-hidden">
        {!activeDraft ? (
          // Use slate-50 for the empty state background, matching editor area bg
          <div className="flex-1 flex flex-col items-center justify-center text-center p-8 bg-slate-50">
            <BookOpen size={40} className="text-slate-400 mb-4" />
            <h2 className="text-lg font-medium text-slate-600 mb-1">No Draft Selected</h2>
            <p className="text-sm text-slate-500 mb-6 max-w-xs">
              Select a draft from the sidebar to begin, or create a new one.
            </p>
            <button 
                onClick={createDraft}
                className="px-4 py-2 bg-blue-500 text-white rounded-md hover:bg-blue-600 focus:ring-2 focus:ring-blue-500 focus:ring-offset-1 flex items-center transition-colors duration-150 text-sm font-medium"
            >
                <PlusCircle size={16} className="mr-1.5" /> Create New Draft
            </button>
          </div>
        ) : (
          <>
            {/* Header remains white */}
            <header className="p-3 border-b border-slate-200 bg-white flex justify-start items-center flex-shrink-0 h-[57px]">
              <h1 className="text-sm font-semibold text-slate-700 truncate pl-1" title={activeDraft.title}>
                {activeDraft.title}
              </h1>
            </header>
            {/* Editor/Preview container area uses slate-50 */}
            <div className="flex flex-1 overflow-hidden bg-slate-50 p-2 sm:p-3 gap-2 sm:gap-3">
              {/* Editor pane is white */}
              <div className="w-1/2 h-full flex flex-col bg-white rounded-md border border-slate-200 shadow-sm focus-within:border-blue-400 focus-within:ring-1 focus-within:ring-blue-400 transition-shadow duration-150">
                <textarea
                  value={activeDraft.content}
                  onChange={(e) => handleMarkdownChange(e.target.value)}
                  className="w-full h-full p-4 sm:p-5 bg-transparent resize-none focus:outline-none font-mono text-xs sm:text-sm leading-relaxed text-slate-800 placeholder-slate-400 tracking-tight"
                  placeholder="# Start typing your markdown here..."
                  key={activeDraft.id}
                  spellCheck="false"
                />
              </div>
              {/* Preview pane is white */}
              <div className="w-1/2 h-full overflow-y-auto bg-white rounded-md border border-slate-200 shadow-sm p-4 sm:p-5">
                <article className="markdown-content lg:prose-xl max-w-none">
                  <ReactMarkdown remarkPlugins={[remarkGfm]}>
                    {activeDraft.content || ''}
                  </ReactMarkdown>
                </article>
              </div>
            </div>
          </>
        )}
      </main>
    </div>
  );
}

